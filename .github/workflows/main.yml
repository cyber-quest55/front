name: iOS CI Build

on:
  pull_request:
    branches:
      - "development"
  workflow_dispatch:
    inputs:
      track:
        description: 'Build track'
        required: false
        default: 'alpha'

jobs:
  build:
    runs-on: macos-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Use Node.js 18.1
      uses: actions/setup-node@v3
      with:
        node-version: 18.1

    - name: Install Node modules
      run: yarn

    - name: Install CocoaPods
      run: sudo gem install cocoapods

    - name: Install pod dependencies
      run: cd ios/App && pod install && cd ../../

    - name: Build ios capacitor
      run: |
        if [ "${{ github.event.inputs.track }}" = "production" ]; then
          echo "Building for production..."
          yarn build-ios:prod  
        elif [ "${{ github.event.inputs.track }}" = "alpha" ]; then
          echo "Building for alpha..."
          yarn build-ios:dev  
        else
          echo "Building for default track..."
          yarn build-ios:dev  
        fi

    - name: Synchronize Capacitor
      run: npx cap sync ios

    - name: Set up Xcode
      run: |
        sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
        sudo xcodebuild -license accept

    - name: Decode and Install Certificate and Provisioning Profile
      env:
        P12_BASE64: ${{ secrets.IOS_P12_BASE64 }}
        MOBILEPROVISION_BASE64: ${{ secrets.IOS_MOBILEPROVISION_BASE64 }}
        P12_PASSWORD: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
        KEYCHAIN_PASSWORD: ${{ secrets.IOS_KEYCHAIN_PASSWORD }}
      run: |
        # Decode the base64 content into files
        echo "$P12_BASE64" | base64 --decode > ${RUNNER_TEMP}/certificate.p12
        echo "$MOBILEPROVISION_BASE64" | base64 --decode > ${RUNNER_TEMP}/profile.mobileprovision

        # Create a temporary keychain
        KEYCHAIN_PATH=${RUNNER_TEMP}/build.keychain
        security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
        security default-keychain -s "$KEYCHAIN_PATH"
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
        security set-keychain-settings -t 3600 -u "$KEYCHAIN_PATH"
        
        # Import the certificate
        security import ${RUNNER_TEMP}/certificate.p12 -k "$KEYCHAIN_PATH" -P "$P12_PASSWORD" -T /usr/bin/codesign
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
        
        # Copy provisioning profile
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp ${RUNNER_TEMP}/profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/

    - name: Build and Archive 
      run: |
        xcodebuild -workspace App.xcworkspace -scheme App -sdk iphoneos -configuration Release clean build CODE_SIGN_IDENTITY="${CODE_SIGN_IDENTITY}" PROVISIONING_PROFILE_SPECIFIER="${PROFILE_NAME}"
      working-directory: ios/App

    - name: Save Build Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: AppBuild
        path: path/to/YourApp.ipa
